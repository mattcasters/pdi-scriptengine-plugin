apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_6
project.ext.kettle_dependency_revision = '5.2.0.0-209'
project.ext.metastore_dependency_revision = '5.2.0.0-209'

version = '1.0'

repositories {
  maven {
    url 'http://nexus.pentaho.org/content/groups/omni/'
  }
  maven {
    url 'http://repo.pentaho.org/artifactory/repo'
  }
  ivy {
    url "http://repo.pentaho.org/artifactory/repo/"
    layout  "pattern", {
      ivy "[organisation]/[module]/[revision]/[module]-[revision].ivy.xml"
      artifact "[organisation]/[module]/[revision]/[module]-[revision].jar"
      m2compatible = true
    }
  }
  mavenCentral()
  mavenLocal()
}

configurations {
  provided
  compile {
    extendsFrom provided
  }
  zip
}

dependencies {
  provided("pentaho-kettle:kettle-core:${project.ext.kettle_dependency_revision}")
  provided("pentaho-kettle:kettle-engine:${project.ext.kettle_dependency_revision}")
  provided("pentaho-kettle:kettle-ui-swt:${project.ext.kettle_dependency_revision}")
  provided("pentaho:metastore:${project.ext.metastore_dependency_revision}")
  
}

task plugin(dependsOn:jar, type: Zip) {
  into("${project.name}/") {
    from jar.outputs.files
    from fileTree(dir: 'package-res')
  }

  // The list of JARs in the lib/ folder is the complement of the intersection of the compile and runtime dependencies,
  // plus the JARs in the runtimeWithoutCompile config
  // The list of JARs in the lib/ folder is the complement of the intersection of the compile and runtime dependencies,
  // plus the JARs in the runtimeWithoutCompile config
  def compileDeps = configurations.compile.resolve()
  def providedDeps = configurations.provided.resolve()
  def leftovers = compileDeps - providedDeps
  into("${project.name}/lib") {
    from leftovers
  }
}

artifacts {
  zip plugin
}

task createGradleWrapper(type: Wrapper) {
  gradleVersion = '2.2'
}
